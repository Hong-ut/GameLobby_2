{"ast":null,"code":"var _jsxFileName = \"/Users/sungjinhong/Desktop/react-task-tracker/src/components/Header.js\";\n//created using rafce (set-up)\nimport PropTypes from 'prop-types';\nimport Button from './Button';\n\n//this sets title = 1st property of the object (props) we receive \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = _ref => {\n  let {\n    title,\n    onClick\n  } = _ref;\n  // receive the property 'title' from the object (props)\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: 'green',\n      text: 'Add',\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n//if <Header /> is passed with smth, this is overwritten\n_c = Header;\nHeader.defaultProps = {\n  title: 'Task Tracker'\n};\nHeader.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\n// const headingStyle = {\n//     color: 'red', backgroundColor: 'black'\n// }\n\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["PropTypes","Button","Header","title","onClick","defaultProps","propTypes","string","isRequired"],"sources":["/Users/sungjinhong/Desktop/react-task-tracker/src/components/Header.js"],"sourcesContent":["//created using rafce (set-up)\nimport PropTypes from 'prop-types'\nimport Button from './Button'\n\n//this sets title = 1st property of the object (props) we receive \nconst Header = ( {title, onClick} ) => { // receive the property 'title' from the object (props)\n    \n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            {/* pass the onClick function as a prop */}\n            <Button color={'green'} text={'Add'} onClick = {onClick}/>\n        </header>\n    )\n}\n\n//if <Header /> is passed with smth, this is overwritten\nHeader.defaultProps = {\n    title: 'Task Tracker',\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\n// const headingStyle = {\n//     color: 'red', backgroundColor: 'black'\n// }\n\nexport default Header"],"mappings":";AAAA;AACA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AAAA;AACA,MAAMC,MAAM,GAAG,QAAwB;EAAA,IAAtB;IAACC,KAAK;IAAEC;EAAO,CAAC;EAAQ;;EAErC,oBACI;IAAQ,SAAS,EAAC,QAAQ;IAAA,wBACtB;MAAA,UAAKD;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAEhB,QAAC,MAAM;MAAC,KAAK,EAAE,OAAQ;MAAC,IAAI,EAAE,KAAM;MAAC,OAAO,EAAIC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACrD;AAEjB,CAAC;;AAED;AAAA,KAXMF,MAAM;AAYZA,MAAM,CAACG,YAAY,GAAG;EAClBF,KAAK,EAAE;AACX,CAAC;AAEDD,MAAM,CAACI,SAAS,GAAG;EACfH,KAAK,EAAEH,SAAS,CAACO,MAAM,CAACC;AAC5B,CAAC;;AAED;AACA;AACA;;AAEA,eAAeN,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}