{"ast":null,"code":"var _jsxFileName = \"/Users/sungjinhong/Desktop/react-task-tracker/src/components/Tasks.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    // don't need \"\" for prop names in JSON for JS\n    id: 1,\n    text: 'Doctors Appointment',\n    day: 'Feb 5th at 2:30pm',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'Meeting at School',\n    day: 'Feb 6th at 1:30pm',\n    reminder: true\n  }, {\n    id: 3,\n    text: 'Food Shopping',\n    day: 'Feb 5th at 2:30pm',\n    reminder: false\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.text\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n_s(Tasks, \"gHJLOX7D5o90Q1Ecu9dq9aM4tP8=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useState","Tasks","tasks","setTasks","id","text","day","reminder","map","task"],"sources":["/Users/sungjinhong/Desktop/react-task-tracker/src/components/Tasks.js"],"sourcesContent":["import { useState } from \"react\"\n\nconst Tasks = () => {\n    const [tasks, setTasks] = useState([\n    {\n        // don't need \"\" for prop names in JSON for JS\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Meeting at School',\n        day: 'Feb 6th at 1:30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Food Shopping',\n        day: 'Feb 5th at 2:30pm',\n        reminder: false,\n    },\n])\n\n    return (\n        <>\n            {/* task = each ele (JSON) in tasks */}\n            {tasks.map((task) => (\n                <h3 key={task.id}>{task.text}</h3>\n            ))}\n        </>\n    )\n}\n\nexport default Tasks"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAEhC,MAAMC,KAAK,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,CACnC;IACI;IACAI,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,qBAAqB;IAC3BC,GAAG,EAAE,mBAAmB;IACxBC,QAAQ,EAAE;EACd,CAAC,EACD;IACIH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,mBAAmB;IACzBC,GAAG,EAAE,mBAAmB;IACxBC,QAAQ,EAAE;EACd,CAAC,EACD;IACIH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,eAAe;IACrBC,GAAG,EAAE,mBAAmB;IACxBC,QAAQ,EAAE;EACd,CAAC,CACJ,CAAC;EAEE,oBACI;IAAA,UAEKL,KAAK,CAACM,GAAG,CAAEC,IAAI,iBACZ;MAAA,UAAmBA,IAAI,CAACJ;IAAI,GAAnBI,IAAI,CAACL,EAAE;MAAA;MAAA;MAAA;IAAA,QACnB;EAAC,iBACH;AAEX,CAAC;AAAA,GA/BKH,KAAK;AAAA,KAALA,KAAK;AAiCX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}