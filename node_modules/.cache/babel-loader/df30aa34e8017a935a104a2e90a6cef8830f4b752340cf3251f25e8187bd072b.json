{"ast":null,"code":"var _jsxFileName = \"/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/react-task-tracker copy/src/components/Player.js\",\n  _s = $RefreshSig$();\n//TODO: use Material UI (from videos)\n\nimport { useContext } from 'react';\nimport AppContext from './Context';\nimport Select from 'react-select';\nimport { Container } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = _ref => {\n  _s();\n  let {\n    player\n  } = _ref;\n  //onDelete is a function passed up (to the parent file)\n  //onDelete = passed up (executed in parent func) while task = passed down (executed here)\n  const {\n    colors,\n    setColors,\n    players,\n    setPlayers\n  } = useContext(AppContext);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"ls\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        backgroundColor: player.color\n      },\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        options: colors,\n        placeholder: 'Player ' + player.id + ' Color',\n        onChange: e => {\n          console.log(player.id, e);\n          setPlayers(players.map(play => play.id === player.id ? {\n            ...play,\n            color: e.value\n          } : play));\n          if (player.color != \"white\") {\n            setColors(colors.map(color => color.value === player.color ? {\n              ...color,\n              disabled: false\n            } : color));\n            console.log(player.color);\n          }\n          // ****************\n          //QUESTION: WHY DOES the code below WORK? I didn't use setColors here...\n          //I didn't use setColors but colors (referred by e here) still changes...\n          // *************\n          e.disabled = true;\n        },\n        isOptionDisabled: option => option.disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(Player, \"DwKLOPLSKOe8XNbVTGhkN9fVpDs=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["useContext","AppContext","Select","Container","Player","player","colors","setColors","players","setPlayers","backgroundColor","color","id","e","console","log","map","play","value","disabled","option"],"sources":["/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/react-task-tracker copy/src/components/Player.js"],"sourcesContent":["//TODO: use Material UI (from videos)\n\nimport { useContext } from 'react'\nimport AppContext from './Context'\nimport Select from 'react-select'\nimport { Container } from '@material-ui/core'\n\nconst Player = ({ player }) => { //onDelete is a function passed up (to the parent file)\n    //onDelete = passed up (executed in parent func) while task = passed down (executed here)\n    const {colors, setColors, players, setPlayers} = useContext(AppContext)\n\n    return (\n        <Container maxWidth=\"ls\">\n            <div className='container' style={{ backgroundColor: player.color }}>\n                <Select\n                    options={colors}\n                    placeholder={'Player ' + player.id + ' Color'}\n                    onChange={(e) => {\n                        console.log(player.id, e)\n                        setPlayers(\n                            players.map((play) =>\n                                play.id === player.id ? { ...play, color: e.value }\n                                    : play\n                            ))\n                        if (player.color != \"white\") {\n                            setColors(\n                                colors.map((color) => \n                                    color.value === player.color ? { ...color, disabled: false}\n                                        : color\n                                )\n                            )\n                            console.log(player.color)\n                        }\n                        // ****************\n                        //QUESTION: WHY DOES the code below WORK? I didn't use setColors here...\n                        //I didn't use setColors but colors (referred by e here) still changes...\n                        // *************\n                        e.disabled = true;\n                    }}\n                    isOptionDisabled={(option) => option.disabled}\n                />\n            </div>\n        </Container>\n    )\n}\nexport default Player;"],"mappings":";;AAAA;;AAEA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,UAAU,MAAM,WAAW;AAClC,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,SAAS,QAAQ,mBAAmB;AAAA;AAE7C,MAAMC,MAAM,GAAG,QAAgB;EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC;EAAO;EAC7B;EACA,MAAM;IAACC,MAAM;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAGT,UAAU,CAACC,UAAU,CAAC;EAEvE,oBACI,QAAC,SAAS;IAAC,QAAQ,EAAC,IAAI;IAAA,uBACpB;MAAK,SAAS,EAAC,WAAW;MAAC,KAAK,EAAE;QAAES,eAAe,EAAEL,MAAM,CAACM;MAAM,CAAE;MAAA,uBAChE,QAAC,MAAM;QACH,OAAO,EAAEL,MAAO;QAChB,WAAW,EAAE,SAAS,GAAGD,MAAM,CAACO,EAAE,GAAG,QAAS;QAC9C,QAAQ,EAAGC,CAAC,IAAK;UACbC,OAAO,CAACC,GAAG,CAACV,MAAM,CAACO,EAAE,EAAEC,CAAC,CAAC;UACzBJ,UAAU,CACND,OAAO,CAACQ,GAAG,CAAEC,IAAI,IACbA,IAAI,CAACL,EAAE,KAAKP,MAAM,CAACO,EAAE,GAAG;YAAE,GAAGK,IAAI;YAAEN,KAAK,EAAEE,CAAC,CAACK;UAAM,CAAC,GAC7CD,IAAI,CACb,CAAC;UACN,IAAIZ,MAAM,CAACM,KAAK,IAAI,OAAO,EAAE;YACzBJ,SAAS,CACLD,MAAM,CAACU,GAAG,CAAEL,KAAK,IACbA,KAAK,CAACO,KAAK,KAAKb,MAAM,CAACM,KAAK,GAAG;cAAE,GAAGA,KAAK;cAAEQ,QAAQ,EAAE;YAAK,CAAC,GACrDR,KAAK,CACd,CACJ;YACDG,OAAO,CAACC,GAAG,CAACV,MAAM,CAACM,KAAK,CAAC;UAC7B;UACA;UACA;UACA;UACA;UACAE,CAAC,CAACM,QAAQ,GAAG,IAAI;QACrB,CAAE;QACF,gBAAgB,EAAGC,MAAM,IAAKA,MAAM,CAACD;MAAS;QAAA;QAAA;QAAA;MAAA;IAChD;MAAA;MAAA;MAAA;IAAA;EACA;IAAA;IAAA;IAAA;EAAA,QACE;AAEpB,CAAC;AAAA,GArCKf,MAAM;AAAA,KAANA,MAAM;AAsCZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}