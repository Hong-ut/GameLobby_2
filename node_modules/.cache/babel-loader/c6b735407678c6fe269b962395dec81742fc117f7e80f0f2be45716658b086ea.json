{"ast":null,"code":"var _jsxFileName = \"/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/react-task-tracker copy/src/components/Lobby.js\",\n  _s2 = $RefreshSig$();\n//TODO:\n//NO DUPLICATED COLORS!\n\nimport { useState, createContext, useContext } from 'react';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Lobby = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [players, setPlayers] = useState([{\n    id: 1,\n    color: 'red'\n  }, {\n    id: 2,\n    color: 'blue'\n  }, {\n    id: 3,\n    color: 'green'\n  }, {\n    id: 4,\n    color: 'purple'\n  }]);\n  const Players = _ref => {\n    let {\n      players\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: players.map(player => /*#__PURE__*/_jsxDEV(Player, {\n        player: player\n      }, player.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false);\n  };\n  const Player = _ref2 => {\n    _s();\n    let {\n      player\n    } = _ref2;\n    //onDelete is a function passed up (to the parent file)\n    //onDelete = passed up (executed in parent func) while task = passed down (executed here)\n    const [colors, setColors] = useState([{\n      value: 'red',\n      label: 'red',\n      disabled: false\n    }, {\n      value: 'blue',\n      label: 'blue',\n      disabled: false\n    }, {\n      value: 'green',\n      label: 'green',\n      disabled: false\n    }, {\n      value: 'purple',\n      label: 'purple',\n      disabled: false\n    }]);\n    const changeColor = (id, toColor) => {\n      setPlayers(players.map(player => player.id === id ? {\n        ...player,\n        color: toColor.value\n      } : player));\n      setColors(colors.map(color =>\n      //for each color in colors (options)\n      color.value === toColor.value ? {\n        ...color,\n        disabled: true\n      } : color));\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        backgroundColor: player.color\n      },\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        options: colors,\n        placeholder: 'Player ' + player.id + ' Color',\n        onChange: e => {\n          console.log(player.id, e);\n          {\n            changeColor(player.id, e);\n          }\n        },\n        isOptionDisabled: option => option.disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  };\n  _s(Player, \"qWoym73mdExyEHVJzetZq/fmJrY=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Players, {\n      players: players\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s2(Lobby, \"SjVm3ILNtp2Gnqla/oSALvMCsBc=\");\n_c = Lobby;\nexport default Lobby;\nvar _c;\n$RefreshReg$(_c, \"Lobby\");","map":{"version":3,"names":["useState","createContext","useContext","Select","Lobby","players","setPlayers","id","color","Players","map","player","Player","colors","setColors","value","label","disabled","changeColor","toColor","backgroundColor","e","console","log","option"],"sources":["/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/react-task-tracker copy/src/components/Lobby.js"],"sourcesContent":["//TODO:\n//NO DUPLICATED COLORS!\n\nimport { useState, createContext, useContext } from 'react'\nimport Select from 'react-select'\n\n\nconst Lobby = () => {\n\n    const [players, setPlayers] = useState([\n        {\n            id: 1,\n            color: 'red'\n        },\n        {\n            id: 2,\n            color: 'blue'\n        },\n        {\n            id: 3,\n            color: 'green'\n        },\n        {\n            id: 4,\n            color: 'purple'\n        }\n    ])\n\n\n    const Players = ({ players }) => {\n        return (\n            <>\n                {players.map((player) => (\n                    <Player key={player.id} player={player} />\n\n                ))}\n            </>\n        )\n    }\n\n    const Player = ({ player }) => { //onDelete is a function passed up (to the parent file)\n        //onDelete = passed up (executed in parent func) while task = passed down (executed here)\n        const [colors, setColors] = useState([\n            { value: 'red', label: 'red', disabled: false },\n            { value: 'blue', label: 'blue', disabled: false },\n            { value: 'green', label: 'green', disabled: false },\n            { value: 'purple', label: 'purple', disabled: false }\n        ])\n\n        const changeColor = (id, toColor) => {\n            setPlayers(\n                players.map((player) =>\n                    player.id === id ? { ...player, color: toColor.value }\n                        : player\n                ))\n            setColors(\n                colors.map((color) => //for each color in colors (options)\n                    color.value === toColor.value ? { ...color, disabled: true}\n                        : color\n                )\n            )\n        }\n\n        return (\n            <div className='container' style={{ backgroundColor: player.color }}>\n                <Select\n                    options={colors}\n                    placeholder= {'Player ' + player.id + ' Color'}\n                    onChange={(e) => {\n                        console.log(player.id, e)\n                        { changeColor(player.id, e) }\n                    }}\n                    isOptionDisabled={(option) => option.disabled}\n                />\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Players players={players} />\n        </div>\n    )\n}\n\nexport default Lobby\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}