[{"/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/index.js":"1","/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/App.js":"2","/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/reportWebVitals.js":"3","/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/components/Lobby.js":"4","/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/components/Context.js":"5","/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/components/Player.js":"6","/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/components/Login.js":"7","/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/firebase.js":"8","/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/components/Dashboard.js":"9","/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/components/Register.js":"10","/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/components/Reset.js":"11"},{"size":355,"mtime":1670978283976,"results":"12","hashOfConfig":"13"},{"size":1129,"mtime":1669250981285,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1669244422676,"results":"15","hashOfConfig":"13"},{"size":456,"mtime":1671957874909,"results":"16","hashOfConfig":"13"},{"size":1262,"mtime":1671957732625,"results":"17","hashOfConfig":"13"},{"size":5780,"mtime":1671958139178,"results":"18","hashOfConfig":"13"},{"size":1642,"mtime":1669491804198,"results":"19","hashOfConfig":"13"},{"size":2786,"mtime":1671959603311,"results":"20","hashOfConfig":"13"},{"size":2088,"mtime":1671959828482,"results":"21","hashOfConfig":"13"},{"size":2151,"mtime":1671959349857,"results":"22","hashOfConfig":"13"},{"size":1218,"mtime":1671946466616,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"msulsu",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/index.js",[],[],"/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/App.js",["66"],[],"//was done using rface (from exetension)\n//import { BrowserRouter, Route, Routes} from 'react-router-dom'\nimport Lobby from './components/Lobby';\nimport { AppContextProvider } from './components/Context';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport React from 'react';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Reset from './components/Reset';\nimport Dashboard from './components/Dashboard';\n\nconst App = () => {\n  // All hooks are defined in App.js (highest component & Provided as context in the return statement)\n\n\n\n  return (\n    // NOTE: this context is also provided for its grandchildren (X need several Providers)\n\n    <AppContextProvider>\n      <Router>\n        <Routes>\n          <Route exact path=\"/\" element={<Login />} />\n          <Route exact path=\"/register\" element={<Register />} />\n          <Route exact path=\"/reset\" element={<Reset />} />\n          <Route exact path=\"/dashboard\" element={<Dashboard />} />\n        </Routes>\n      </Router>\n    </AppContextProvider>\n\n  );\n}\n\n// export to index.js\nexport default App;\n",[],"/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/reportWebVitals.js",[],[],"/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/components/Lobby.js",["67"],[],"//TODO:\n\nimport { useContext } from 'react'\nimport Player from './Player'\nimport {AppContext, AppContextProvider} from './Context';\n\n\nconst Lobby = ({ docID }) => {\n    const {players} = useContext(AppContext)\n\n    return (\n        <div>\n            <>\n                {players.map((player) => (\n                    <Player key={player.id} player={player} docID={docID} />\n                ))}\n            </>\n        </div>\n    )\n}\n\n\nexport default Lobby;\n","/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/components/Context.js",["68","69","70","71"],[],"import { createContext, useEffect, useState } from 'react';\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth, db, logout } from \"../firebase\";\n\nconst AppContext = createContext();\n\nconst AppContextProvider = ({ children }) => {\n    const [players, setPlayers] = useState([\n        {\n            id: 1,\n            color: 'white'\n        },\n        {\n            id: 2,\n            color: 'white'\n        },\n        {\n            id: 3,\n            color: 'white'\n        },\n        {\n            id: 4,\n            color: 'white'\n        }\n    ]);\n\n    const [colors, setColors] = useState([\n        { value: 'red', label: 'red', disabled: false },\n        { value: 'blue', label: 'blue', disabled: false },\n        { value: 'green', label: 'green', disabled: false },\n        { value: 'purple', label: 'purple', disabled: false }\n    ]);\n\n    const [user, loading, error] = useAuthState(auth);\n    // const [docID, setDocID] = useState('');\n\n    // useEffect(\n    // )\n    // const [userEmail] = useState(user.email);\n\n\n    return (\n        <AppContext.Provider value={{ players, setPlayers, colors, setColors, user, loading }}>\n            {children}\n        </AppContext.Provider>\n    );\n};\n\n\nexport { AppContext, AppContextProvider };\n","/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/components/Player.js",["72","73","74","75","76","77","78","79","80"],[],"//TODO: use Material UI (from videos)\n\nimport { useContext, useEffect, useState, useNavigate } from 'react'\nimport Select from 'react-select'\nimport { Container } from '@material-ui/core'\nimport { AppContext, AppContextProvider } from './Context'\nimport axios from 'axios';\n\n\nconst Player = ({ player, docID }) => { //onDelete is a function passed up (to the parent file)\n    //onDelete = passed up (executed in parent func) while task = passed down (executed here)\n    const { colors, setColors, players, setPlayers } = useContext(AppContext)\n    //const docRef = doc(db, 'users', auth.doc)\n    // use Axios to connect to cloud functions, which connects to firestore\n    // getcolors (getdoc from firestore), setcolors (updatedoc)\n    // URL => Axios side \n\n    const [postColorURL, setPostColorURL] = useState('');\n    const [colorsDisabled, setcolorsDisabled] = useState([]);\n    const [currentUserDocID, setCurrentUserDocID] = useState('');\n    const [getColorURL, setGetColorURL] = useState(`https://us-central1-gamelobby-ecdf4.cloudfunctions.net/getColor?text=${docID}`);\n\n    // user's saved colors\n    useEffect(() => {\n        console.log(docID);\n        axios.get(getColorURL)\n            .then(response => {\n                const playerColors = response.data.result\n                setPlayers([{\n                    id: 1,\n                    color: playerColors[0]\n                },\n                {\n                    id: 2,\n                    color: playerColors[1]\n                },\n                {\n                    id: 3,\n                    color: playerColors[2]\n                },\n                {\n                    id: 4,\n                    color: playerColors[3]\n                }])\n\n                // disable the player colors saved from the firestore in the first render (when I use setstates sequentially instead of this approach, it only rerenders the changes made in the last setstate -> error)\n                if (playerColors.includes('red')) {\n                    colors[0].disabled = true;\n                }\n                if (playerColors.includes('blue')) {\n                    colors[1].disabled = true;\n                }\n                if (playerColors.includes('green')) {\n                    colors[2].disabled = true;\n                }\n                if (playerColors.includes('purple')) {\n                    colors[3].disabled = true;\n                }\n\n            })\n            .catch(error => {\n                // Handle any errors\n            });\n\n    }, [])\n\n\n    // map through colors and find the color whose color.value == e.value THEN color.disabled = true\n    useEffect(() => {\n        console.log(\"color Disabled: \", colorsDisabled);\n        // ***********************ERROR: ONLY THE LAST ELEMENT in colorsDisabled is being disabled in the beginning. \n        // All colors in colorsDisabled should be disabled\n        for (let i = 0; i < colorsDisabled.length; i++) {\n            setColors(\n                colors.map((color) =>\n                    color.value === colorsDisabled[i] ? { ...color, disabled: true } : color\n                )\n            )\n            console.log(colorsDisabled[i], \" has been disabled\", colors)\n        }\n    }, [colorsDisabled])\n\n    useEffect(() => {\n        console.log(postColorURL);\n        if (postColorURL != \"\") {\n            axios.get(postColorURL)\n                .then(response => {\n                    console.log(\"data posted to firebase\");\n                })\n                .catch(error => {\n                    // Handle any errors\n                });\n        }\n    }, [postColorURL]\n    )\n\n\n\n    // setColors(\n    //     colors.map((color) =>\n    //         color.value === player.color ? { ...color, disabled: false }\n    //             : color\n    //     )\n    // )\n\n\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\n\n    return (\n        <Container maxWidth=\"lg\">\n            <div className='container' style={{ backgroundColor: player.color }}>\n                <Select\n                    options={colors}\n                    placeholder={'Player ' + player.id + ' Color'}\n                    onChange={(e) => {\n                        console.log(player.id, e)\n                        setPlayers(\n                            players.map((play) =>\n                                play.id === player.id ? { ...play, color: e.value }\n                                    : play\n                            ))\n                        if (player.color != \"white\") {\n                            setColors(\n                                colors.map((color) =>\n                                    color.value === player.color ? { ...color, disabled: false }\n                                        : color\n                                )\n                            )\n                        }\n                        console.log(\"TEST: \", e.value, player.id);\n                        const ind = player.id - 1\n                        setPostColorURL(`https://us-central1-gamelobby-ecdf4.cloudfunctions.net/postColor?text=${docID},${ind},${e.value}`);\n                        console.log(postColorURL);\n                        // ****************\n                        //QUESTION: WHY DOES the code below WORK? I didn't use setColors here...\n                        //I didn't use setColors but colors (referred by e here) still changes...\n                        // *************\n                        // e.disabled = true;\n                        setcolorsDisabled([e.value]);\n                        console.log(colors)\n\n                    }}\n                    isOptionDisabled={(option) => option.disabled}\n                />\n            </div>\n        </Container>\n    )\n}\nexport default Player;\n","/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/components/Login.js",["81","82"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { auth, signInWithEmailAndPassword, signInWithGoogle } from \"../firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport \"./Login.css\";\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (loading) {\n      // maybe trigger a loading screen\n      return;\n    }\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n        <input\n          type=\"text\"\n          className=\"login__textBox\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <input\n          type=\"password\"\n          className=\"login__textBox\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n        />\n        <button\n          className=\"login__btn\"\n          onClick={() => signInWithEmailAndPassword(auth, email, password)}\n        >\n          Login\n        </button>\n        <button className=\"login__btn login__google\" onClick={signInWithGoogle}>\n          Login with Google\n        </button>\n        <div>\n          <Link to=\"/reset\">Forgot Password</Link>\n        </div>\n        <div>\n          Don't have an account? <Link to=\"/register\">Register</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Login;","/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/firebase.js",[],[],"/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/components/Dashboard.js",["83","84","85","86","87","88"],[],"import React, { useEffect, useState, useContext } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Dashboard.css\";\nimport { auth, db, logout } from \"../firebase\";\nimport { query, collection, getDocs, where, setDoc } from \"firebase/firestore\";\nimport Lobby from \"./Lobby\";\nimport { AppContext, AppContextProvider } from './Context';\n\nfunction Dashboard() {\n    const { user, loading, error } = useContext(AppContext);\n    const [name, setName] = useState(\"\");\n    const [pfp, setpfp] = useState(\"\");\n    const [docRef, setDocRef] = useState(\"\");\n    const navigate = useNavigate();\n    const fetchUserName = async () => {\n        try {\n            const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\n            const doc = await getDocs(q);\n            const data = doc.docs[0].data();\n            setName(data.name);\n            setpfp(data.picture);\n            setDocRef(doc.docs[0].id);\n            console.log(docRef);\n        } catch (err) {\n            console.error(err);\n            alert(\"An error occured while fetching user data\");\n        }\n    };\n\n    useEffect(() => {\n        if (loading) return;\n        if (!user) return navigate(\"/\");\n        fetchUserName();\n    }, [user, loading]);\n\n    return (\n        <>\n            <div className=\"dashboard\">\n                <div className=\"dashboard__container\">\n                    Logged in as\n                    <div>{name}</div>\n                    {/* <div>{user?.email}</div> */}\n                    <img\n                        src={pfp}\n                        alt=\"new\"\n                        style={{ width: 300, height: 200 }}\n                    />\n                    <button className=\"dashboard__btn\" onClick={logout}>\n                        Logout\n                    </button>\n                </div>\n            </div>\n\n            {/* display docID of the user */}\n            {/* <h1> {docRef}</h1> */}\n\n            < Lobby docID='5qsdr5xIQRgFscpwOPvf' />\n        </>\n    );\n}\nexport default Dashboard;\n","/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/components/Register.js",["89","90"],[],"import React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {\n  auth,\n  registerWithEmailAndPassword,\n  signInWithGoogle,\n} from \"../firebase\";\nimport \"./Register.css\";\n\nfunction Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [picture, setPicture] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n\n  const register = () => {\n    if (!name) alert(\"Please enter name\");\n    registerWithEmailAndPassword(name, email, password, picture);\n  };\n\n  useEffect(() => {\n    if (loading) return;\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n\n  return (\n    <div className=\"register\">\n      <div className=\"register__container\">\n        <input\n          type=\"text\"\n          className=\"register__textBox\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"Full Name\"\n        />\n        <input\n          type=\"text\"\n          className=\"register__textBox\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <input\n          type=\"password\"\n          className=\"register__textBox\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n        />\n        <input\n          type=\"profile picture\"\n          className=\"register__textBox\"\n          value={picture}\n          onChange={(e) => setPicture(e.target.value)}\n          placeholder=\"Profile Picture URL\"\n        />\n        <button className=\"register__btn\" onClick={register}>\n          Register\n        </button>\n        <button\n          className=\"register__btn register__google\"\n          onClick={signInWithGoogle}\n        >\n          Register with Google\n        </button>\n\n        <div>\n          Already have an account? <Link to=\"/\">Login</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Register;","/Users/sungjinhong/Desktop/Aether Meta/GameLobbyExercise/GameLobby_2/src/components/Reset.js",["91","92","93","94","95"],[],"import React, { useEffect, useState, useContext } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { auth, sendPasswordResetEmail } from \"../firebase\";\nimport \"./Reset.css\";\nimport {AppContext, AppContextProvider} from './Context';\n\n\nfunction Reset() {\n  const [email, setEmail] = useState(\"\");\n  const {user, loading, error} = useContext(AppContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (loading) return;\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n  return (\n    <div className=\"reset\">\n      <div className=\"reset__container\">\n        <input\n          type=\"text\"\n          className=\"reset__textBox\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <button\n          className=\"reset__btn\"\n          onClick={() => sendPasswordResetEmail(email)}\n        >\n          Send password reset email\n        </button>\n        <div>\n          Don't have an account? <Link to=\"/register\">Register</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Reset;\n",{"ruleId":"96","severity":1,"message":"97","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":13},{"ruleId":"96","severity":1,"message":"100","line":5,"column":21,"nodeType":"98","messageId":"99","endLine":5,"endColumn":39},{"ruleId":"96","severity":1,"message":"101","line":1,"column":25,"nodeType":"98","messageId":"99","endLine":1,"endColumn":34},{"ruleId":"96","severity":1,"message":"102","line":3,"column":16,"nodeType":"98","messageId":"99","endLine":3,"endColumn":18},{"ruleId":"96","severity":1,"message":"103","line":3,"column":20,"nodeType":"98","messageId":"99","endLine":3,"endColumn":26},{"ruleId":"96","severity":1,"message":"104","line":34,"column":27,"nodeType":"98","messageId":"99","endLine":34,"endColumn":32},{"ruleId":"96","severity":1,"message":"105","line":3,"column":43,"nodeType":"98","messageId":"99","endLine":3,"endColumn":54},{"ruleId":"96","severity":1,"message":"100","line":6,"column":22,"nodeType":"98","messageId":"99","endLine":6,"endColumn":40},{"ruleId":"96","severity":1,"message":"106","line":20,"column":12,"nodeType":"98","messageId":"99","endLine":20,"endColumn":28},{"ruleId":"96","severity":1,"message":"107","line":20,"column":30,"nodeType":"98","messageId":"99","endLine":20,"endColumn":49},{"ruleId":"96","severity":1,"message":"108","line":21,"column":25,"nodeType":"98","messageId":"99","endLine":21,"endColumn":39},{"ruleId":"109","severity":1,"message":"110","line":65,"column":8,"nodeType":"111","endLine":65,"endColumn":10,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":81,"column":8,"nodeType":"111","endLine":81,"endColumn":24,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":85,"column":26,"nodeType":"117","messageId":"118","endLine":85,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":122,"column":42,"nodeType":"117","messageId":"118","endLine":122,"endColumn":44},{"ruleId":"96","severity":1,"message":"104","line":9,"column":25,"nodeType":"98","messageId":"99","endLine":9,"endColumn":30},{"ruleId":"109","severity":1,"message":"119","line":17,"column":6,"nodeType":"111","endLine":17,"endColumn":21,"suggestions":"120"},{"ruleId":"96","severity":1,"message":"121","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":22},{"ruleId":"96","severity":1,"message":"122","line":5,"column":10,"nodeType":"98","messageId":"99","endLine":5,"endColumn":14},{"ruleId":"96","severity":1,"message":"123","line":6,"column":45,"nodeType":"98","messageId":"99","endLine":6,"endColumn":51},{"ruleId":"96","severity":1,"message":"100","line":8,"column":22,"nodeType":"98","messageId":"99","endLine":8,"endColumn":40},{"ruleId":"96","severity":1,"message":"104","line":11,"column":28,"nodeType":"98","messageId":"99","endLine":11,"endColumn":33},{"ruleId":"109","severity":1,"message":"124","line":35,"column":8,"nodeType":"111","endLine":35,"endColumn":23,"suggestions":"125"},{"ruleId":"96","severity":1,"message":"104","line":16,"column":25,"nodeType":"98","messageId":"99","endLine":16,"endColumn":30},{"ruleId":"109","severity":1,"message":"119","line":27,"column":6,"nodeType":"111","endLine":27,"endColumn":21,"suggestions":"126"},{"ruleId":"96","severity":1,"message":"121","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":22},{"ruleId":"96","severity":1,"message":"122","line":5,"column":10,"nodeType":"98","messageId":"99","endLine":5,"endColumn":14},{"ruleId":"96","severity":1,"message":"100","line":7,"column":21,"nodeType":"98","messageId":"99","endLine":7,"endColumn":39},{"ruleId":"96","severity":1,"message":"104","line":12,"column":25,"nodeType":"98","messageId":"99","endLine":12,"endColumn":30},{"ruleId":"109","severity":1,"message":"119","line":17,"column":6,"nodeType":"111","endLine":17,"endColumn":21,"suggestions":"127"},"no-unused-vars","'Lobby' is defined but never used.","Identifier","unusedVar","'AppContextProvider' is defined but never used.","'useEffect' is defined but never used.","'db' is defined but never used.","'logout' is defined but never used.","'error' is assigned a value but never used.","'useNavigate' is defined but never used.","'currentUserDocID' is assigned a value but never used.","'setCurrentUserDocID' is assigned a value but never used.","'setGetColorURL' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'colors', 'docID', 'getColorURL', and 'setPlayers'. Either include them or remove the dependency array.","ArrayExpression",["128"],"React Hook useEffect has missing dependencies: 'colors' and 'setColors'. Either include them or remove the dependency array.",["129"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["130"],"'useAuthState' is defined but never used.","'auth' is defined but never used.","'setDoc' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchUserName' and 'navigate'. Either include them or remove the dependency array.",["131"],["132"],["133"],{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"138","fix":"142"},{"desc":"138","fix":"143"},"Update the dependencies array to be: [colors, docID, getColorURL, setPlayers]",{"range":"144","text":"145"},"Update the dependencies array to be: [colors, colorsDisabled, setColors]",{"range":"146","text":"147"},"Update the dependencies array to be: [user, loading, navigate]",{"range":"148","text":"149"},"Update the dependencies array to be: [user, loading, navigate, fetchUserName]",{"range":"150","text":"151"},{"range":"152","text":"149"},{"range":"153","text":"149"},[2517,2519],"[colors, docID, getColorURL, setPlayers]",[3214,3230],"[colors, colorsDisabled, setColors]",[606,621],"[user, loading, navigate]",[1288,1303],"[user, loading, navigate, fetchUserName]",[797,812],[593,608]]